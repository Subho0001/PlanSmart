swagger: '2.0'
info:
  title: Flask API
  description: API for managing users, services, reviews, orders, transactions, and payments.
  version: 3.0.3
host: localhost:5000
basePath: /
schemes:
  - http
paths:
  /contact:
    post:
      summary: Submit a contact form
      description: Allows a user to submit their contact details and a message, which will be sent to the site owner via email.
      parameters:
        - name: body
          in: body
          description: Contact form data (name, email, and message)
          required: true
          schema:
            $ref: '#/definitions/ContactForm'
      responses:
        '200':
          description: Contact form submitted successfully
        '400':
          description: Invalid contact form data
  /user/create:
    post:
      summary: Create a new user
      description: Creates a new user with the provided details.
      parameters:
        - name: body
          in: body
          description: User data
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User created successfully
        '500':
          description: Error in creating user

  /user/login:
    post:
      summary: Login user
      description: Authenticates the user with the provided credentials.
      parameters:
        - name: body
          in: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /user/{user_id}:
    get:
      summary: Get user details
      description: Fetches details of the user by user ID.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: User details
        '404':
          description: User not found

  /services/create/{user_id}:
    post:
      summary: Create a service
      description: Creates a service for a specific user (vendor).
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Service details
          required: true
          schema:
            $ref: '#/definitions/Service'
      responses:
        '201':
          description: Service created successfully
        '500':
          description: Error in creating service

  /services/individual/{service_uid}:
    get:
      summary: Get individual service
      description: Fetches details of a specific service by service ID.
      parameters:
        - name: service_uid
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Service details
        '404':
          description: Service not found
  
  /services/{service_name}:
    get:
      summary: Get services by name
      description: Fetches a list of business names and locations by service name.
      parameters:
        - name: service_name
          in: path
          required: true
          type: string
          description: The name of the service to search for
      responses:
        '200':
          description: A list of business names and locations
          schema:
            type: array
            items:
              type: object
              properties:
                business_name:
                  type: string
                location:
                  type: string
        '404':
          description: No services found with the given name

  /services/all:
    get:
      summary: Get all services
      description: Fetches details of all available services.
      responses:
        '200':
          description: List of services

  /order/{user_id}/place:
    post:
      summary: Place an order
      description: Places an order for a specific user.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Order details
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '201':
          description: Order placed successfully

  /order/{user_id}/accept:
    post:
      summary: Accept an order
      description: Allows the user to accept an order.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Order accepted successfully
        '404':
          description: Order not found

  /order/{user_id}/payment:
    post:
      summary: Make payment for an order
      description: Allows the user to pay for an accepted order.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Transaction details
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: Payment successful
        '404':
          description: Order not found or not accepted

  /order/{user_id}:
    get:
      summary: Get orders by user ID
      description: Fetches the order details associated with the specified user ID.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Order details
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '404':
          description: Orders not found for the given user

  /order/{user_id}/address:
    post:
      summary: Post the address for the order
      description: Submit the delivery address for the order when requesting location details.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Address details for the order
          required: true
          schema:
            $ref: '#/definitions/Address'
      responses:
        '201':
          description: Address added successfully
        '400':
          description: Invalid address data

  /review/{user_id}/{order_id}:
    post:
      summary: Post a review for a specific order
      description: Allows a user to post a review for a specific order.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: order_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          description: Review details for the order
          required: true
          schema:
            $ref: '#/definitions/Review'
      responses:
        '201':
          description: Review posted successfully
        '400':
          description: Invalid review data

    get:
      summary: Get review for a specific order
      description: Fetches the review for a specific order by the user.
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
        - name: order_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Review details
          schema:
            $ref: '#/definitions/Review'
        '404':
          description: Review not found

  /review/rating/{user_id}:
    get:
      summary: Get the rating for a specific vendor
      description: Fetches the average rating for the services provided by the specified user (vendor).
      parameters:
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Average rating of the vendor
          schema:
            type: object
            properties:
              average_rating:
                type: number
                format: float
        '404':
          description: Vendor or ratings not found

  /transaction/{order_id}/{user_id}:
    get:
      summary: Get payment details for a specific order
      description: Fetches the payment details for a specific order made by the specified user.
      parameters:
        - name: order_id
          in: path
          required: true
          type: string
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Payment details
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction or order not found for the given user and order ID

definitions:
  User:
    type: object
    properties:
      user_uid:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      address:
        type: string
      city_town:
        type: string
      state:
        type: string
      pincode:
        type: integer


  Service:
    type: object
    properties:
      service_uid:
        type: string
      services:
        type: string
      business_name:
        type: string
      location:
        type: string
  
  
  Order:
    type: object
    properties:
      order_uid:
        type: string
        description: Unique identifier for the order
      user_uid:
        type: string
        description: Unique identifier for the user who placed the order
      order_service_uid:
        type: string
        description: Unique identifier for the service being ordered
      date_time:
        type: string
        format: date-time
        description: The date and time when the order was placed
      state:
        type: string
        enum: [Pending, Confirmed, Completed, Cancelled]
        description: The current status of the order
      addressline:
        type: string
        description: Address where the service is requested
      city_town:
        type: string
        description: City or town related to the service location
      
      pincode:
        type: integer
        description: Postal code for the order location
      pack_type:
        type: boolean
        description: Indicates if the order includes a specific service package
      decision:
        type: boolean
        description: Flag indicating approval or decline of the order
      
  Transaction:
    type: object
    properties:
      transaction_uid:
        type: string
      order_uid:
        type: string
      total_price:
        type: number
        format: float
      date_time:
        type: string
        format: date-time
      transaction_type:
        type: string
      status:
        type: boolean
      
        
  Review:
    type: object
    properties:
      review_uid:
        type: string
     
      rating:
        type: number
        format: float
      comment:
        type: string