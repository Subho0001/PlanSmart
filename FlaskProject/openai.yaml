openapi: 3.0.0
info:
  title: ER Diagram API
  version: 1.0.0
  description: API to handle Users, Transactions, Orders, and Services.
servers:
  - url: http://localhost:5000
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.

  /users/{user_id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: The ID of the user to retrieve.
      responses:
        '200':
          description: A single user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: The ID of the user to update.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.

    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: The ID of the user to delete.
      responses:
        '204':
          description: User deleted successfully.

  /transactions:
    get:
      summary: Get all transactions
      responses:
        '200':
          description: A list of transactions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /orders:
    get:
      summary: Get all orders
      responses:
        '200':
          description: A list of orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

components:
  schemas:
    User:
      type: object
      properties:
        user_uid:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        address_line:
          type: string
        city:
          type: string
        state:
          type: string
        pincode:
          type: integer

    Transaction:
      type: object
      properties:
        transaction_id:
          type: string
        transaction_type:
          type: string
        total_price:
          type: number
        status:
          type: boolean

    Order:
      type: object
      properties:
        order_uid:
          type: string
        user_uid:
          type: string
        service_uid:
          type: string
        pack_type:
          type: boolean
        order_service_uid:
          type: string

    Service:
      type: object
      properties:
        service_uid:
          type: string
        service_name:
          type: string
